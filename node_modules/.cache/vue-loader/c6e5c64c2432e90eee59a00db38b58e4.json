{"remainingRequest":"/home/soojy/Documents/projects/vuetify-surpk/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/soojy/Documents/projects/vuetify-surpk/src/components/ItemList.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/soojy/Documents/projects/vuetify-surpk/src/components/ItemList.vue","mtime":1619749475467},{"path":"/home/soojy/Documents/projects/vuetify-surpk/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/soojy/Documents/projects/vuetify-surpk/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/soojy/Documents/projects/vuetify-surpk/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/soojy/Documents/projects/vuetify-surpk/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/soojy/Documents/projects/vuetify-surpk/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouZmFkZS1lbnRlciB7CiAgb3BhY2l0eTogMDsKfQoKLmZhZGUtZW50ZXItYWN0aXZlIHsKICBhbmltYXRpb246IGZhZGVpbiAxczsKfQoKLmZhZGUtbGVhdmUgewogIG9wYWNpdHk6IDE7Cn0KCi5mYWRlLWxlYXZlLWFjdGl2ZSB7CiAgYW5pbWF0aW9uOiBmYWRlaW4gMXMgcmV2ZXJzZTsKfQoKQGtleWZyYW1lcyBmYWRlaW4gewogIGZyb20gewogICAgb3BhY2l0eTogMDsKICB9CiAgdG8gewogICAgb3BhY2l0eTogMTsKICB9Cn0KLnctMTAwIHsKICB3aWR0aDogMTAwJTsKfQo="},{"version":3,"sources":["ItemList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4LA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ItemList.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-expansion-panels accordion focusable class=\"mt-3\">\n    <transition-group class=\"w-100\" name=\"fade\"\n      ><item\n        @del-todo=\"delTodo\"\n        @start-todo=\"startTodo\"\n        @finish-todo=\"finishTodo\"\n        class=\"w-100\"\n        v-for=\"(todo, index) in todos\"\n        v-bind:todo=\"todo\"\n        v-bind:count=\"index\"\n        v-bind:key=\"todo.id\"\n      ></item\n    ></transition-group>\n  </v-expansion-panels>\n</template>\n\n<script>\nimport Item from \"./Item\";\nimport { bus } from \"@/bus\";\nexport default {\n  name: \"App\",\n  components: {\n    Item,\n  },\n  props: {\n    source: String,\n  },\n  mounted() {\n    console.log(123123);\n    bus.$on(\"create-Todo\", (data) => {\n      this.createTodo(data);\n    });\n    fetch(\"http://surpk-api-last.herokuapp.com/public/api/post\")\n      .then((response) => response.json())\n      .then((json) => {\n        setTimeout(() => {\n          this.todos = json;\n          console.log(json);\n          this.loading = true;\n        }, 1000);\n      });\n  },\n  data: function () {\n    return {\n      firstname: \"\",\n      lastname: \"\",\n      drawer: false,\n      dialog: false,\n      items: [\"СП-1\", \"СП-2\", \"СП-3\", \"СП-4\"],\n      todos: [],\n      token: null,\n    };\n  },\n\n  methods: {\n    delTodo(id) {\n      console.log(id);\n      fetch(`http://surpk-api-last.herokuapp.com/public/api/post/${id[0]}`, {\n        headers: {\n          Authorization: `Bearer ${this.getToken()}`,\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        method: \"DELETE\",\n      }).then((response) => {\n        if (response.status == 202) {\n          this.alert(\"Удаление успешно\", \"info\");\n          this.todos.splice(id[1], 1);\n        } else {\n          if (response.status == 401) {\n            this.alert(\"Ошибка аутентификации\", \"error\");\n          } else {\n            this.alert(\"Ошибка\", \"error\");\n          }\n        }\n      });\n    },\n    startTodo(id) {\n      console.log(id);\n      fetch(`http://surpk-api-last.herokuapp.com/public/api/post/${id[0]}`, {\n        headers: {\n          Authorization: `Bearer ${this.getToken()}`,\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ status: 2 }),\n        method: \"PATCH\",\n      }).then((response) => {\n        if (response.status == 202) {\n          this.alert(\"Заявка принята\", \"success\");\n          this.todos[id[1]].status = 2;\n        } else {\n          if (response.status == 401) {\n            this.alert(\"Ошибка аутентификации\", \"error\");\n          } else {\n            this.alert(\"Ошибка\", \"error\");\n          }\n        }\n      });\n    },\n    finishTodo(id) {\n      console.log(id);\n      fetch(`http://surpk-api-last.herokuapp.com/public/api/post/${id[0]}`, {\n        headers: {\n          Authorization: `Bearer ${this.getToken()}`,\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ status: 3 }),\n        method: \"PATCH\",\n      }).then((response) => {\n        if (response.status == 202) {\n          this.alert(\"Заявка завершена\", \"success\");\n          this.todos[id[1]].status = 3;\n        } else {\n          if (response.status == 401) {\n            this.alert(\"Ошибка аутентификации\", \"error\");\n          } else {\n            this.alert(\"Ошибка\", \"error\");\n          }\n        }\n      });\n    },\n\n    async createTodo(data) {\n      let result;\n      let s = await fetch(\n        `http://surpk-api-last.herokuapp.com/public/api/post`,\n        {\n          headers: {\n            Authorization: `Bearer ${this.getToken()}`,\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(data),\n          method: \"POST\",\n        }\n      )\n        .then((response) => {\n          if (response.status == 201) {\n            this.alert(\"Создание успешно\", \"info\");\n            result = 1;\n          } else {\n            if (response.status == 401) {\n              this.alert(\"Ошибка аутентификации\", \"error\");\n            } else {\n              this.alert(\"Ошибка\", \"error\");\n            }\n          }\n          return response.json();\n        })\n        .then((data) => {\n          return data;\n        });\n      if (result == 1) {\n        s.user = this.getUsername();\n        s.status = 1;\n        console.log(s);\n\n        this.todos.push(s);\n      }\n    },\n    alert(text, type, duration) {\n      this.$emit(\"alert\", text, type, duration);\n    },\n    getToken() {\n      if (this.token == null) {\n        let user = JSON.parse(localStorage.getItem(\"user\"));\n        this.token = user.token;\n      }\n      return this.token;\n    },\n    getUsername() {\n      if (this.username == null) {\n        let user = JSON.parse(localStorage.getItem(\"user\"));\n        this.username = user.username;\n      }\n      return this.username;\n    },\n    // addTodo(todoNew) {\n    //   // console.log(this);\n    //   // console.log(todoNew);\n    // },\n  },\n};\n</script>\n<style>\n.fade-enter {\n  opacity: 0;\n}\n\n.fade-enter-active {\n  animation: fadein 1s;\n}\n\n.fade-leave {\n  opacity: 1;\n}\n\n.fade-leave-active {\n  animation: fadein 1s reverse;\n}\n\n@keyframes fadein {\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n}\n.w-100 {\n  width: 100%;\n}\n</style>\n"]}]}